= form.error_messages
%fieldset 
  %ol.form
    %li
      = form.label :name
      = form.text_field :name
      = reqd
    %li
      = form.label :product_year
      = form.text_field :product_year
      = reqd
    %li
      = form.label :top_note
      = form.text_area :top_note, { :class => 'elastic', :style => 'width: 495px!important;height: 40px;' }
    %li
      = form.label :middle_note
      = form.text_area :middle_note, { :class => 'elastic', :style => 'width: 495px!important;height: 40px;' }
    %li
      = form.label :base_note
      = form.text_area :base_note, { :class => 'elastic', :style => 'width: 495px!important;height: 40px;' }
%fieldset#items
  %legend Ingredients
  = form.fields_for :items, form.object.items do |item_form|
    = render :partial => 'formulations/item_form', :locals => { :form => item_form }
.add_child= add_nested_fields_for(form, :items, 'items', { :label => '+ Add Item', :partial => 'formulations/item_form', :object => FormulationItem.new, :callback => 'itemAdded()' })
%fieldset
  %ol.buttons
    %li= form.submit nil, :class => :primary
    %li= cancel_link(@fragrance)

- content_for :tail do
  :javascript
    function itemAdded() {
      $( ".compound" ).autocomplete({
        source: "#{autocomplete_ingredients_path}",
        minLength: 2,
        select: function( event, ui ) {
          $(this).next('.compound_id').val(ui.item.id);
        }
      });
    }
    $(function() {
      itemAdded();
    });
